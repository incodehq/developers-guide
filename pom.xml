<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.incodehq.docs</groupId>
    <artifactId>incode-docs-developers-guide</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>Incode Developers Guide</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <asciidoctor.maven.plugin.version>1.5.3</asciidoctor.maven.plugin.version>
        <asciidoctorj.pdf.version>1.5.0-alpha.11</asciidoctorj.pdf.version>
        <asciidoctorj.version>1.5.4</asciidoctorj.version>
        <asciidoctorj.diagram.version>1.5.0</asciidoctorj.diagram.version>
        <jruby.version>1.7.21</jruby.version>
    </properties>

    <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj.pdf.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>${asciidoctorj.diagram.version}</version>
                    </dependency>
                    <dependency>
            			<groupId>org.incode.asciidoctor.monotree</groupId>
            			<artifactId>incode-asciidoctor-extension-monotree</artifactId>
            			<version>0.0.2</version>
            		</dependency>
                </dependencies>
                <configuration>
                    <!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
                    <!--
                    <baseDir>${project.basedir}</baseDir>
                    -->
                    <!-- Attributes common to all output formats -->
                    <attributes>
                        <endpoint-url>http://incode.org</endpoint-url>
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                        <project-version>${project.version}</project-version>
                    </attributes>
                    <requires>
                        <require>asciidoctor-diagram</require>
                    </requires>
                </configuration>
                <executions>
                    <execution>
                        <id>asciidoc-to-html</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <!--
                            Scenarios for linking vs embedding assets:

                            Link to both stylesheets and images::

                              - don't set embedAssets option
                              - set linkcss attribute to true
                              - set imagesdir attribute to path relative to AsciiDoc source file

                              <attributes>
                                  <linkcss>true</linkcss>
                                  <imagesdir>./images</imagesdir>
                              </attributes>

                            Embed stylesheets and images::
                            
                              - set embedAssets option to true
                              - don't set linkcss attribute
                              - set imagesdir attribute to path relative to project root

                              <embedAssets>true</embedAssets>
                              <attributes>
                                  <imagesdir>src/docs/asciidoc/images</imagesdir>
                              </attributes>

                            Link to stylesheets but embed images::
                            
                              - set embedAssets option to true
                              - set linkcss attribute to true
                              - set imagesdir attribute to path relative to project root

                              <embedAssets>true</embedAssets>
                              <attributes>
                                  <linkcss>true</linkcss>
                                  <imagesdir>src/docs/asciidoc/images</imagesdir>
                              </attributes>

                            Embed stylesheets but link images (default)::
                            
                              - don't set embedAssets option
                              - don't set linkcss attribute
                              - set imagesdir attribute to path relative to AsciiDoc source file

                              <attributes>
                                  <imagesdir>./images</imagesdir>
                              </attributes>

                            IMPORTANT: When you enable image embedding, you must qualify the path the the imagesdir, as shown above.
                            -->
                            <attributes>
                                <imagesdir/>
                                <toc>left</toc>
                                <icons>font</icons>
                                <sectanchors>true</sectanchors>
                                <!-- set the idprefix to blank -->
                                <idprefix/>
                                <idseparator>-</idseparator>
                                <docinfo1>true</docinfo1>
                            </attributes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-pdf-doc</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>pdf</backend>
                            <!-- Since 1.5.0-alpha.9 PDF back-end can use 'rouge' as well as 'coderay'
                            source highlighting -->
                            <sourceHighlighter>rouge</sourceHighlighter>
                            <attributes>
                                <icons>font</icons>
                                <pagenums/>
                                <toc/>
                                <idprefix/>
                                <imagesdir/>
                                <idseparator>-</idseparator>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
            NOTE: Use the maven-resources-plugin if there are assets outside the AsciiDoc source folder
                  that need to be copied to the generated-docs. The Maven plugin automatically copies
                  non-AsciiDoc files in the AsciiDoc source folder to generated-docs.
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-asciidoc-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/docs/resources</directory>
                                    <includes>
                                        <include>**/*.jpg</include>
                                        <include>**/*.png</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>target/generated-docs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>
    </build>
</project>
